Задание №1. Разработать программу для работы с элементами массива M, в которой:
1. Массив имеет следующие характеристики:
- адрес начала массива в памяти БЭВМ - 0x6cc;
- число измерений исходного массива - 1;
- количество элементов исходного массива - 21;
- каждый элемент является знаковым числом с разрядностью 24 бит;
- нумерация элементов начинается с 2;
- элементы хранятся в массиве по границам слов, нет необходимости в плотной упаковке;
2. Для элементов массива необходимо вычислить одно значение по правилам:
- агрегировать необходимо только для элементы массива с кратными 3-м i-индексами;
- из выбранных элементов необходимо вычислить cумму значений и записать результат в память по адресу 0x400.
- Результатом является одно 32-х разрядное число!
Примечание: все числа представлены в десятичной системе счисления, если явно не указано иное.



ORG 0x06CC
WORD 2 ; 2   Младшее слово
WORD 2 ; 2   Старшее слово
WORD 3 ; 3
WORD 3 ; 3
WORD 4 ; 4
WORD 4 ; 4
WORD 5 ; 5
WORD 5 ; 5
WORD 6 ; 6
WORD 6 ; 6
WORD 7 ; 7
WORD 7 ; 7

ORG 0x400
RES_M: word ?
RES_H: word ?

ORG 0x500
ARR: word 0x06CC
CURR: word ? ;Указатель на текущий элемент массива
IND: word 3 ; текущий индекс элемента
LEN: word 7 ; Индекс последнего элемента массива

EXT_SIGN:
	ST TMP_AC
	AND SIGN_MASK
	BEQ PL
		MI: 
			LD TMP_AC
			OR MI_MASK
			JUMP RETURN
		PL:
			LD TMP_AC
			AND PL_MASK
		RETURN: RET
	TMP_AC: WORD ?
	SIGN_MASK: word 0x0080
	PL_MASK: word 0x00FF
	MI_MASK: word 0xFF00

START:
CLA
LD $ARR
ADD #0x2 ; Переход на элемент с индексом 3
ST CURR
CYCLE:
	LD (CURR)+ ; Загрузка младшего слова
	ADD $RES_M
	ST $RES_M
	
	LD (CURR)+ ; Загрузка старшего слова
	CALL EXT_SIGN  ; Расширить знак для старшего
	ADC $RES_H
	ST $RES_H

	LD IND
	CMP LEN
	BLT NEXT
	BEQ NEXT
	JUMP STOP
	NEXT: 
	LD IND
	ADD #0x3
	ST IND
	LD CURR
	ADD #0x6
	ST CURR
	JUMP CYCLE

STOP: HLT
	
	

